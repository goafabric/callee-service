plugins {
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.graalvm.buildtools.native' version '0.9.20'
	id 'com.google.cloud.tools.jib' version '3.3.1'
	id 'jacoco'
	id 'java'
}

ext {
	set('dockerRegistry', "goafabric")
	set('baseImage', 'ibm-semeru-runtimes:open-17.0.6_10-jre-focal@sha256:739eab970ff538cf22a20b768d7755dad80922a89b73b2fddd80dd79f9b880a1')
	set('nativeBuilderImage', 'dashaun/builder:20230225')
}

dependencies {
	constraints {
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
		implementation 'org.mapstruct:mapstruct:1.5.3.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
		implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.0.2'
	}
}

group = 'org.goafabric'
version = '3.0.5-console-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots'}
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
	exclude '**/*NRIT*'
	finalizedBy jacocoTestReport
}

jib {
	from.image = "${baseImage}"
	from.platforms = [com.google.cloud.tools.jib.gradle.PlatformParameters.of("linux/amd64"), com.google.cloud.tools.jib.gradle.PlatformParameters.of("linux/arm64")]
	to.image = "${dockerRegistry}/${project.name}:${project.version}"
	container.jvmFlags = ['-Xms256m', '-Xmx256m']
}

def archSuffix = (System.properties['os.arch'] == 'aarch64') ? "-arm64v8" : ""
tasks.named('bootBuildImage') {
	builder = "${nativeBuilderImage}"
	bootBuildImage.imageName = "${dockerRegistry}/${project.name}-native${archSuffix}:${project.version}"
	environment = ['BP_NATIVE_IMAGE': 'true', 'BP_JVM_VERSION': '17', 'BP_NATIVE_IMAGE_BUILD_ARGUMENTS': '-J-Xmx4000m']
}
task dockerImageNativeRun(type:Exec) { dependsOn('bootBuildImage')
	commandLine 'docker', 'run', "--rm", "${dockerRegistry}/${project.name}-native${archSuffix}:${project.version}", '-check-integrity'
}
task dockerImageNative(type:Exec) { dependsOn(dockerImageNativeRun)
	commandLine 'docker', 'push', "${dockerRegistry}/${project.name}-native${archSuffix}:${project.version}"
}

graalvmNative {
	binaries {
		main {
			buildArgs.add('-H:+PrintClassInitialization')
		}
	}
}
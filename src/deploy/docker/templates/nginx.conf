events {
}

http {
    server {
        listen 80;
        server_name localhost;

        location = /oauth2/auth {
#            internal;
            proxy_pass       http://host.docker.internal:4180/;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
            # nginx auth_request includes headers but not body
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;
        }

#        location / {
#            return 301 $scheme://$http_host/callee/;
#        }

        location / {
#            return 301 $scheme://$http_host/oauth2/auth;

            auth_request /oauth2/auth;
            auth_request_set $email  $upstream_http_x_auth_request_email;
            proxy_set_header X-Email $email;
            auth_request_set $user  $upstream_http_x_auth_request_user;
            proxy_set_header X-User  $user;
            auth_request_set $token  $upstream_http_x_auth_request_access_token;
            proxy_set_header X-Access-Token $token;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            proxy_pass http://callee-service-application:50900/;

            #forwarding of suburl, also needs spring framework activation
            proxy_set_header    Host $host;
            proxy_set_header    X-Forwarded-Prefix /callee;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-Port 8080;
        }




    }
}
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.goafabric</groupId>
    <artifactId>spring-parent</artifactId>
    <version>2.7.0</version>
    <packaging>pom</packaging>
    <name>goa parent pom</name>
    <description>goa parent pom</description>

    <scm>
        <url>https://github.com/goafabric/goa-parent.git</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <!-- Project -->
        <java.version>17</java.version>
        <maven.compiler.release>${java.version}</maven.compiler.release>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <docker.baseimage.multi>ibm-semeru-runtimes:open-17.0.3_7-jre-focal@sha256:e89df25f95379321ef61d5119eee68c28884ff8f8c5deaf2d474f3cdb1dbbb7e</docker.baseimage.multi>

        <!-- Spring Boot -->
        <spring.boot.version>2.7.0</spring.boot.version>
        <spring.cloud.version>2021.0.3</spring.cloud.version>
        <spring.native.version>0.12.0</spring.native.version>

        <!-- code generation -->
        <lombok.version>1.18.24</lombok.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <lombok.mapstruct.binding.version>0.2.0</lombok.mapstruct.binding.version>

        <!-- swagger openapi -->
        <springdoc-openapi-ui.version>1.6.6</springdoc-openapi-ui.version>
        <springfox-swagger.version>3.0.0</springfox-swagger.version>
        <swagger-annotations.version>1.5.20</swagger-annotations.version>

        <!-- 3rd party -->
        <joda-time.version>2.10.10</joda-time.version>
        <resilience4j.version>1.7.0</resilience4j.version>
        <jasypt.version>1.9.3</jasypt.version>
        <jasypt-spring-boot-starter.version>3.0.3</jasypt-spring-boot-starter.version>

        <!-- Test -->
        <equalsverifier.version>3.7.2</equalsverifier.version>

        <!-- Build Plugins-->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>

        <build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>

        <!-- Release and Deploy Plugins -->
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>

        <!-- Further Build Plugins -->
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <jib-maven-plugin.version>3.2.1</jib-maven-plugin.version>


        <!--   OWN   -->

        <!-- Docker Registry -->
        <docker.registry>docker.io/goafabric</docker.registry>

        <!-- Sonarqube -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>java</sonar.language>

        <!-- Deploy disabled here-->
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.experimental</groupId>
                <artifactId>spring-native</artifactId>
                <version>${spring.native.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-native</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-spring-boot2</artifactId>
                <version>${resilience4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jasypt</groupId>
                <artifactId>jasypt</artifactId>
                <version>${jasypt.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jasypt</groupId>
                <artifactId>jasypt-hibernate5</artifactId>
                <version>${jasypt.version}</version>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>${equalsverifier.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <release>${maven.compiler.release}</release>
                        <!-- mapstruct now needs mapstruct-binding configured like this, also order seems to be important first mapstruct than lombok -->
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok.mapstruct.binding.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*NRIT.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <destFile>${sonar.jacoco.reportPaths}</destFile>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>fat-jar</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>repackage</id>
                                    <goals>
                                        <goal>repackage</goal>
                                    </goals>
                                    <configuration>
                                        <layout>JAR</layout>
                                        <!-- needed for junit5 integration tests not to crash with no classdeffound because of the two jars-->
                                        <classifier>fat</classifier>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>docker-image</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.google.cloud.tools</groupId>
                            <artifactId>jib-maven-plugin</artifactId>
                            <version>${jib-maven-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>docker-image</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                    <configuration>
                                        <from>
                                            <image>${docker.baseimage.multi}</image>
                                            <platforms>
                                                <platform>
                                                    <architecture>amd64</architecture>
                                                    <os>linux</os>
                                                </platform>
                                                <platform>
                                                    <architecture>arm64</architecture>
                                                    <os>linux</os>
                                                </platform>
                                            </platforms>
                                        </from>
                                        <to>
                                            <image>${docker.registry}/${project.artifactId}</image>
                                            <tags>
                                                <tag>${project.version}</tag>
                                            </tags>
                                        </to>
                                        <container>
                                            <jvmFlags>
                                                <jvmFlag>-Xms256m</jvmFlag>
                                                <jvmFlag>-Xmx256m</jvmFlag>
                                                <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                                            </jvmFlags>
                                            <volumes>
                                                <volume>/tmp</volume>
                                            </volumes>
                                        </container>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>docker-image-native</id>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.experimental</groupId>
                    <artifactId>spring-native</artifactId>
                </dependency>
            </dependencies>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <version>${spring.boot.version}</version>
                            <executions>
                                <execution>
                                    <id>build-image</id>
                                    <goals>
                                        <goal>build-image</goal>
                                    </goals>
                                    <configuration>
                                        <excludes>
                                            <exclude>
                                                <groupId>org.projectlombok</groupId>
                                                <artifactId>lombok</artifactId>
                                            </exclude>
                                            <!--
                                            <exclude>
                                                <groupId>com.h2database</groupId>
                                                <artifactId>h2</artifactId>
                                            </exclude>
                                            -->
                                        </excludes>
                                        <image>
                                            <name>${docker.registry}/${project.artifactId}-native:${project.version}
                                            </name>
                                            <builder>paketobuildpacks/builder:base
                                            </builder> <!-- to get wget or curl we need build:full but this blows up the image to 700MB -->
                                            <env>
                                                <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
                                                <BP_JVM_VERSION>17</BP_JVM_VERSION>
                                                <BP_NATIVE_IMAGE_BUILD_ARGUMENTS>-J-Xmx6000m --initialize-at-build-time=org.flywaydb.NativePathLocationScanner</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
                                            </env>
                                            <pullPolicy>IF_NOT_PRESENT</pullPolicy>
                                            <buildpacks><buildpack>gcr.io/paketo-buildpacks/java-native-image:7.19.0</buildpack></buildpacks>
                                        </image>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.springframework.experimental</groupId>
                            <artifactId>spring-aot-maven-plugin</artifactId>
                            <version>${spring.native.version}</version>
                            <executions>
                                <execution>
                                    <id>test-generate</id>
                                    <goals>
                                        <goal>test-generate</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>generate</id>
                                    <goals>
                                        <goal>generate</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- Spring Native documentation claims that hibernate enhance is needed, seems to work without it
                        https://docs.jboss.org/hibernate/orm/5.4/topical/html_single/bytecode/BytecodeEnhancement.html#_build_time_enhancement -->
                        <plugin>
                            <!-- workaround for missing publish functionality, see: https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image-example-publish -->
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>exec-maven-plugin</artifactId>
                            <version>${exec-maven-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>integrity</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>exec</goal>
                                    </goals>
                                    <configuration>
                                        <executable>docker</executable>
                                        <arguments>
                                            <argument>run</argument>
                                            <argument>${docker.registry}/${project.artifactId}-native:${project.version}
                                            </argument>
                                            <argument>-check-integrity</argument>
                                        </arguments>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>docker push</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>exec</goal>
                                    </goals>
                                    <configuration>
                                        <executable>docker</executable>
                                        <arguments>
                                            <argument>push</argument>
                                            <argument>${docker.registry}/${project.artifactId}-native:${project.version}
                                            </argument>
                                        </arguments>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
        </repository>

        <repository>
            <id>spring-snapshot</id>
            <name>Spring snapshot</name>
            <url>https://repo.spring.io/snapshot</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
        </pluginRepository>

        <pluginRepository>
            <id>spring-snapshot</id>
            <name>Spring snapshot</name>
            <url>https://repo.spring.io/snapshot</url>
        </pluginRepository>
    </pluginRepositories>
</project>
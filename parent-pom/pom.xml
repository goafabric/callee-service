<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.goafabric</groupId>
    <artifactId>spring-parent</artifactId>
    <version>3.0.2</version>
    <packaging>pom</packaging>
    <name>goa parent pom</name>
    <description>goa parent pom</description>

    <properties>
        <!-- Project -->
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <docker.baseimage>ibm-semeru-runtimes:open-17.0.4.1_1-jre-focal@sha256:29d74ccd3e20aff9cca04df418ba6dca38cf86ea1dba42635c8d8ba89f2d25a5</docker.baseimage>

        <!-- Kotlin -->
        <kotlin.version>1.6.21</kotlin.version>
        <kotlin.code.style>official</kotlin.code.style>
        <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>

        <!-- Spring Boot -->
        <spring.boot.version>3.0.2</spring.boot.version>
        <spring.cloud.version>2022.0.0</spring.cloud.version>

        <native-maven-plugin.version>0.9.18</native-maven-plugin.version>
        <spring.native.check.integrity.argument></spring.native.check.integrity.argument>
        <arch.suffix></arch.suffix>
        
        <!-- code generation -->
        <lombok.version>1.18.24</lombok.version>
        <mapstruct.version>1.5.2.Final</mapstruct.version>
        <lombok.mapstruct.binding.version>0.2.0</lombok.mapstruct.binding.version>

        <!-- 3rd party -->
        <springdoc-openapi-ui.version>1.6.13</springdoc-openapi-ui.version>
        <springdoc-2-openapi-ui.version>2.0.2</springdoc-2-openapi-ui.version>
        <swagger-annotations.version>1.5.20</swagger-annotations.version>
        <joda-time.version>2.12.0</joda-time.version>

        <!-- Test -->
        <equalsverifier.version>3.10.1</equalsverifier.version>

        <!-- Build Plugins-->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>

        <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>

        <!-- Release and Deploy Plugins -->
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>

        <!-- Further Build Plugins -->
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <jib-maven-plugin.version>3.3.1</jib-maven-plugin.version>
        <dependency-check-maven.version>7.1.1</dependency-check-maven.version>

        <!--   OWN   -->

        <!-- Docker Registry -->
        <docker.registry>docker.io/goafabric</docker.registry>

        <!-- Sonarqube -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>java</sonar.language>

        <!-- Deploy disabled here-->
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-native</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-2-openapi-ui.version}</version>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>${equalsverifier.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <!-- mapstruct now needs mapstruct-binding configured like this, also order seems to be important first mapstruct than lombok -->
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok.mapstruct.binding.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*NRIT.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <destFile>${sonar.jacoco.reportPaths}</destFile>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>fat-jar</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>repackage</id>
                                    <goals>
                                        <goal>repackage</goal>
                                    </goals>
                                    <configuration>
                                        <layout>JAR</layout>
                                        <!-- needed for junit5 integration tests not to crash with no classdeffound because of the two jars-->
                                        <classifier>fat</classifier>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>docker-image</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.google.cloud.tools</groupId>
                            <artifactId>jib-maven-plugin</artifactId>
                            <version>${jib-maven-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>docker-image</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                    <configuration>
                                        <from>
                                            <image>${docker.baseimage}</image>
                                            <platforms>
                                                <platform>
                                                    <architecture>amd64</architecture>
                                                    <os>linux</os>
                                                </platform>
                                                <platform>
                                                    <architecture>arm64</architecture>
                                                    <os>linux</os>
                                                </platform>
                                            </platforms>
                                        </from>
                                        <to>
                                            <image>${docker.registry}/${project.artifactId}</image>
                                            <tags>
                                                <tag>${project.version}</tag>
                                            </tags>
                                        </to>
                                        <container>
                                            <jvmFlags>
                                                <jvmFlag>-Xms256m</jvmFlag>
                                                <jvmFlag>-Xmx256m</jvmFlag>
                                                <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                                            </jvmFlags>
                                            <volumes>
                                                <volume>/tmp</volume>
                                            </volumes>
                                        </container>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        
        <profile>
            <id>docker-image-native</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <version>${spring.boot.version}</version>
                            <executions>
                                <execution>
                                    <id>process-aot</id>
                                    <goals><goal>process-aot</goal></goals>
                                </execution>
                                <execution>
                                    <id>build-image</id>
                                    <phase>install</phase>
                                    <goals><goal>build-image</goal></goals>
                                    <configuration>
                                        <image>
                                            <name>${docker.registry}/${project.artifactId}-native${arch.suffix}:${project.version}</name>
                                            <builder>dashaun/java-native-builder-multiarch:7.41.0</builder>
                                            <env>
                                                <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
                                                <BP_JVM_VERSION>${java.version}</BP_JVM_VERSION>
                                                <BP_NATIVE_IMAGE_BUILD_ARGUMENTS>-J-Xmx4000m</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
                                                <BP_LOG_LEVEL>INFO</BP_LOG_LEVEL>
                                            </env>
                                            <pullPolicy>IF_NOT_PRESENT</pullPolicy>
                                        </image>
                                        <excludes>
                                            <exclude>
                                                <groupId>org.projectlombok</groupId>
                                                <artifactId>lombok</artifactId>
                                            </exclude>
                                        </excludes>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.graalvm.buildtools</groupId>
                            <artifactId>native-maven-plugin</artifactId>
                            <version>${native-maven-plugin.version}</version>
                            <configuration>
                                <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                                <metadataRepository>
                                    <enabled>true</enabled>
                                </metadataRepository>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>add-reachability-metadata</id>
                                    <goals>
                                        <goal>add-reachability-metadata</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <!-- workaround for missing publish functionality, see: https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image-example-publish -->
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>exec-maven-plugin</artifactId>
                            <version>${exec-maven-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>integrity</id>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>exec</goal>
                                    </goals>
                                    <configuration>
                                        <executable>docker</executable>
                                        <arguments>
                                            <argument>run</argument>
                                            <argument>--rm</argument>
                                            <argument>${spring.native.check.integrity.argument}</argument>
                                            <argument>${docker.registry}/${project.artifactId}-native${arch.suffix}:${project.version}</argument>
                                            <argument>-check-integrity</argument>
                                        </arguments>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>docker push</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>exec</goal>
                                    </goals>
                                    <configuration>
                                        <executable>docker</executable>
                                        <arguments>
                                            <argument>push</argument>
                                            <argument>${docker.registry}/${project.artifactId}-native${arch.suffix}:${project.version}</argument>
                                        </arguments>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>set-architecture-arm64</id>
            <activation>
                <os><arch>aarch64</arch></os>
            </activation>
            <properties>
                <arch.suffix>-arm64v8</arch.suffix>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>snapshots-repo</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
            <releases><enabled>false</enabled></releases>
            <snapshots><enabled>true</enabled></snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>